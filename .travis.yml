language: cpp

compiler:
    - gcc

before_install:
    # update apt-repository
    - sudo add-apt-repository -y ppa:ubuntu-toolchain-r/test
    - sudo apt-get -qq update

    # update to gcc with c++11 support
    - sudo apt-get -qq install gcc-4.9 g++-4.9
    - sudo update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-4.9 90
    - sudo update-alternatives --install /usr/bin/gcov gcov /usr/bin/gcov-4.9 90

    # build opencv
    - sudo apt-get -y install libopencv-dev build-essential cmake git libgtk2.0-dev pkg-config python-dev python-numpy libdc1394-22 libdc1394-22-dev libjpeg-dev libpng12-dev libtiff4-dev libjasper-dev libavcodec-dev libavformat-dev libswscale-dev libxine-dev libgstreamer0.10-dev libgstreamer-plugins-base0.10-dev libv4l-dev libtbb-dev libqt4-dev libfaac-dev libmp3lame-dev libopencore-amrnb-dev libopencore-amrwb-dev libtheora-dev libvorbis-dev libxvidcore-dev x264 v4l-utils unzip
    - mkdir opencv
    - cd opencv
    - wget https://github.com/Itseez/opencv/archive/2.4.11.zip
    - unzip -qq 2.4.11.zip
    - cd opencv-2.4.11
    - mkdir build
    - cd build
#    - cmake -D CMAKE_BUILD_TYPE=RELEASE -D CMAKE_INSTALL_PREFIX=/usr/local -D WITH_TBB=ON -D BUILD_NEW_PYTHON_SUPPORT=ON -D WITH_V4L=ON -D WITH_QT=ON -D WITH_OPENGL=ON ..
    - cmake -D CMAKE_BUILD_TYPE=RELEASE -D CMAKE_INSTALL_PREFIX=/usr/local -D WITH_TBB=ON ..
    - make -j8
    - sudo make -j8 install
    - sudo /bin/bash -c 'echo "/usr/local/lib" > /etc/ld.so.conf.d/opencv.conf'
    - sudo ldconfig
    - cd ../../..

install:
    # install GTest
    - sudo apt-get install libgtest-dev
    - "cd /usr/src/gtest && sudo cmake . && sudo cmake --build . && sudo mv libg* /usr/local/lib ; cd -"
    - export GTEST_LIBRARY=/usr/local/lib/libgtest.a
    - export GTEST_MAIN_LIBRARY=/usr/local/lib/libgtest_main.a
    - export GTEST_INCLUDE_DIRS=/usr/include

    # install latest LCOV
    - wget http://ftp.de.debian.org/debian/pool/main/l/lcov/lcov_1.11.orig.tar.gz
    - tar xf lcov_1.11.orig.tar.gz
    - sudo make -C lcov-1.11/ install
    - gem install coveralls-lcov
    - lcov --version
    - g++ --version

    # build this project
    - cmake .
    - cmake --build .

before_script:
    - lcov --directory . --zerocounters

script:
    # run test
    - CTEST_OUTPUT_ON_FAILURE=TRUE make check
    - sh ./cpplint.sh

#after_success:
#    - lcov --directory . --capture --output-file coverage.info
#    - lcov --remove coverage.info 'tests/*' 'examples/*' '/usr/*' 'opencv/*' 'CMakeFiles/*' --output-file coverage.info
#    - lcov --list coverage.info
#    - coveralls-lcov --repo-token c6Fd5h2Ovd2c5PV7agagA89sUhsZCwIPR coverage.info

#notifications:
#    email:
#        recipients: travis@example.com
#        on_success: change
#        on_failure: always
